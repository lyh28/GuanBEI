package com.lyh.guanbei.db;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.lyh.guanbei.bean.BookBean;
import com.lyh.guanbei.bean.CategoryBean;
import com.lyh.guanbei.bean.DeleteBookBean;
import com.lyh.guanbei.bean.DeleteRecordBean;
import com.lyh.guanbei.bean.RecordBean;
import com.lyh.guanbei.bean.UserBean;

import com.lyh.guanbei.db.BookBeanDao;
import com.lyh.guanbei.db.CategoryBeanDao;
import com.lyh.guanbei.db.DeleteBookBeanDao;
import com.lyh.guanbei.db.DeleteRecordBeanDao;
import com.lyh.guanbei.db.RecordBeanDao;
import com.lyh.guanbei.db.UserBeanDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig bookBeanDaoConfig;
    private final DaoConfig categoryBeanDaoConfig;
    private final DaoConfig deleteBookBeanDaoConfig;
    private final DaoConfig deleteRecordBeanDaoConfig;
    private final DaoConfig recordBeanDaoConfig;
    private final DaoConfig userBeanDaoConfig;

    private final BookBeanDao bookBeanDao;
    private final CategoryBeanDao categoryBeanDao;
    private final DeleteBookBeanDao deleteBookBeanDao;
    private final DeleteRecordBeanDao deleteRecordBeanDao;
    private final RecordBeanDao recordBeanDao;
    private final UserBeanDao userBeanDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        bookBeanDaoConfig = daoConfigMap.get(BookBeanDao.class).clone();
        bookBeanDaoConfig.initIdentityScope(type);

        categoryBeanDaoConfig = daoConfigMap.get(CategoryBeanDao.class).clone();
        categoryBeanDaoConfig.initIdentityScope(type);

        deleteBookBeanDaoConfig = daoConfigMap.get(DeleteBookBeanDao.class).clone();
        deleteBookBeanDaoConfig.initIdentityScope(type);

        deleteRecordBeanDaoConfig = daoConfigMap.get(DeleteRecordBeanDao.class).clone();
        deleteRecordBeanDaoConfig.initIdentityScope(type);

        recordBeanDaoConfig = daoConfigMap.get(RecordBeanDao.class).clone();
        recordBeanDaoConfig.initIdentityScope(type);

        userBeanDaoConfig = daoConfigMap.get(UserBeanDao.class).clone();
        userBeanDaoConfig.initIdentityScope(type);

        bookBeanDao = new BookBeanDao(bookBeanDaoConfig, this);
        categoryBeanDao = new CategoryBeanDao(categoryBeanDaoConfig, this);
        deleteBookBeanDao = new DeleteBookBeanDao(deleteBookBeanDaoConfig, this);
        deleteRecordBeanDao = new DeleteRecordBeanDao(deleteRecordBeanDaoConfig, this);
        recordBeanDao = new RecordBeanDao(recordBeanDaoConfig, this);
        userBeanDao = new UserBeanDao(userBeanDaoConfig, this);

        registerDao(BookBean.class, bookBeanDao);
        registerDao(CategoryBean.class, categoryBeanDao);
        registerDao(DeleteBookBean.class, deleteBookBeanDao);
        registerDao(DeleteRecordBean.class, deleteRecordBeanDao);
        registerDao(RecordBean.class, recordBeanDao);
        registerDao(UserBean.class, userBeanDao);
    }
    
    public void clear() {
        bookBeanDaoConfig.clearIdentityScope();
        categoryBeanDaoConfig.clearIdentityScope();
        deleteBookBeanDaoConfig.clearIdentityScope();
        deleteRecordBeanDaoConfig.clearIdentityScope();
        recordBeanDaoConfig.clearIdentityScope();
        userBeanDaoConfig.clearIdentityScope();
    }

    public BookBeanDao getBookBeanDao() {
        return bookBeanDao;
    }

    public CategoryBeanDao getCategoryBeanDao() {
        return categoryBeanDao;
    }

    public DeleteBookBeanDao getDeleteBookBeanDao() {
        return deleteBookBeanDao;
    }

    public DeleteRecordBeanDao getDeleteRecordBeanDao() {
        return deleteRecordBeanDao;
    }

    public RecordBeanDao getRecordBeanDao() {
        return recordBeanDao;
    }

    public UserBeanDao getUserBeanDao() {
        return userBeanDao;
    }

}
